import pytest
import sys
import os
from pathlib import Path
import pandas as pd
#print(os.getcwd())

#current_dir = os.path.dirname(os.path.abspath(__file__))

sys.path.append(r'C:\Users\svanambe\OneDrive - Environmental Protection Agency (EPA)\Profile\Work\Projects\Exposure web app\Exposure_Read_Across\pages')
from New_Chemical import analog_finder

#These can be relative paths, because the interpreter is running the test from this directory 
chem_info_path = ("./chem_info.parq") 
morgan_fp_path = ("./shah-morgan-fp.parq")

one_chloro_four_nitrobenzene_path = ("./one-Chloro-4-nitrobenzene-NN.parq") 
nitrofen_path = ("./nitrofen-NN.parq")
four_nitroaniline_path = ("./4-Nitroaniline-NN.parq")

#These are the nearest-neighbors generated by the file "C:\Users\svanambe\OneDrive - Environmental Protection Agency (EPA)\Profile\Work\Example scripts from others\Genra downloaded scripts\010-genra-py-shah-2016-SJV-modified.ipynb"
one_chloro_four_nitrobenzene_df = pd.read_parquet(one_chloro_four_nitrobenzene_path)
nitrofen_df = pd.read_parquet(nitrofen_path)
four_nitroaniline_df = pd.read_parquet(four_nitroaniline_path)





def test_analogues():
    #'C1836755' is the ID for nitrofen in the Shah SI dataset
    assert analog_finder(morgan_fp_path, chem_info_path, unit_test=True, shah_id='C1836755')["dtxsid"].equals(nitrofen_df["dtxsid"][0:10])
    #C100005 is the ID for 1-Chloro-4-nitrobenzene in the Shah SI dataset
    assert analog_finder(morgan_fp_path, chem_info_path, unit_test=True, shah_id='C100005')["dtxsid"].equals(one_chloro_four_nitrobenzene_df["dtxsid"][0:10])
    #C100016 is the ID for 4-Nitroaniline in the Shah SI dataset
    assert analog_finder(morgan_fp_path, chem_info_path, unit_test=True, shah_id='C100005')["dtxsid"].equals(one_chloro_four_nitrobenzene_df["dtxsid"][0:10])
    
    #print(analog_finder(morgan_fp_path, chem_info_path, one_chloro_four_nitrobenzene_SMILES, 1024))
    #print(analog_finder(morgan_fp_path, chem_info_path, nitrofen_SMILES, 1024, unit_test=True, shah_id='C1836755')[['sim', 'chemical_name']])
    #print(nitrofen_df [['sim', 'chemical_name']])













